{{ config(
    cluster_by = "_airbyte_emitted_at",
    partition_by = {"field": "_airbyte_emitted_at", "data_type": "timestamp", "granularity": "day"},
    unique_key = '_airbyte_ab_id',
    schema = "_airbyte_test_normalization",
    tags = [ "top-level-intermediate" ]
) }}
-- SQL model to cast each column to its adequate SQL type converted from the JSON schema type
-- depends_on: {{ ref('repositories_ab1') }}
select
    cast(id as {{ dbt_utils.type_bigint() }}) as id,
    cast(url as {{ dbt_utils.type_string() }}) as url,
    {{ cast_to_boolean('fork') }} as fork,
    cast(name as {{ dbt_utils.type_string() }}) as name,
    cast(size as {{ dbt_utils.type_bigint() }}) as size,
    cast(owner as {{ type_json() }}) as owner,
    topics,
    cast(git_url as {{ dbt_utils.type_string() }}) as git_url,
    cast(license as {{ type_json() }}) as license,
    cast(node_id as {{ dbt_utils.type_string() }}) as node_id,
    {{ cast_to_boolean('private') }} as private,
    cast(ssh_url as {{ dbt_utils.type_string() }}) as ssh_url,
    cast(svn_url as {{ dbt_utils.type_string() }}) as svn_url,
    {{ cast_to_boolean('archived') }} as archived,
    {{ cast_to_boolean('disabled') }} as disabled,
    {{ cast_to_boolean('has_wiki') }} as has_wiki,
    cast(homepage as {{ dbt_utils.type_string() }}) as homepage,
    cast(html_url as {{ dbt_utils.type_string() }}) as html_url,
    cast(keys_url as {{ dbt_utils.type_string() }}) as keys_url,
    cast(language as {{ dbt_utils.type_string() }}) as language,
    cast(tags_url as {{ dbt_utils.type_string() }}) as tags_url,
    cast(blobs_url as {{ dbt_utils.type_string() }}) as blobs_url,
    cast(clone_url as {{ dbt_utils.type_string() }}) as clone_url,
    cast(forks_url as {{ dbt_utils.type_string() }}) as forks_url,
    cast(full_name as {{ dbt_utils.type_string() }}) as full_name,
    {{ cast_to_boolean('has_pages') }} as has_pages,
    cast(hooks_url as {{ dbt_utils.type_string() }}) as hooks_url,
    cast(pulls_url as {{ dbt_utils.type_string() }}) as pulls_url,
    cast({{ empty_string_to_null('pushed_at') }} as {{ type_timestamp_with_timezone() }}) as pushed_at,
    cast(teams_url as {{ dbt_utils.type_string() }}) as teams_url,
    cast(trees_url as {{ dbt_utils.type_string() }}) as trees_url,
    cast({{ empty_string_to_null('created_at') }} as {{ type_timestamp_with_timezone() }}) as created_at,
    cast(events_url as {{ dbt_utils.type_string() }}) as events_url,
    {{ cast_to_boolean('has_issues') }} as has_issues,
    cast(issues_url as {{ dbt_utils.type_string() }}) as issues_url,
    cast(labels_url as {{ dbt_utils.type_string() }}) as labels_url,
    cast(merges_url as {{ dbt_utils.type_string() }}) as merges_url,
    cast(mirror_url as {{ dbt_utils.type_string() }}) as mirror_url,
    cast({{ empty_string_to_null('updated_at') }} as {{ type_timestamp_with_timezone() }}) as updated_at,
    cast(visibility as {{ dbt_utils.type_string() }}) as visibility,
    cast(archive_url as {{ dbt_utils.type_string() }}) as archive_url,
    cast(commits_url as {{ dbt_utils.type_string() }}) as commits_url,
    cast(compare_url as {{ dbt_utils.type_string() }}) as compare_url,
    cast(description as {{ dbt_utils.type_string() }}) as description,
    cast(forks_count as {{ dbt_utils.type_bigint() }}) as forks_count,
    {{ cast_to_boolean('is_template') }} as is_template,
    cast(permissions as {{ type_json() }}) as permissions,
    cast(branches_url as {{ dbt_utils.type_string() }}) as branches_url,
    cast(comments_url as {{ dbt_utils.type_string() }}) as comments_url,
    cast(contents_url as {{ dbt_utils.type_string() }}) as contents_url,
    cast(git_refs_url as {{ dbt_utils.type_string() }}) as git_refs_url,
    cast(git_tags_url as {{ dbt_utils.type_string() }}) as git_tags_url,
    {{ cast_to_boolean('has_projects') }} as has_projects,
    cast(releases_url as {{ dbt_utils.type_string() }}) as releases_url,
    cast(statuses_url as {{ dbt_utils.type_string() }}) as statuses_url,
    cast(assignees_url as {{ dbt_utils.type_string() }}) as assignees_url,
    cast(downloads_url as {{ dbt_utils.type_string() }}) as downloads_url,
    {{ cast_to_boolean('has_downloads') }} as has_downloads,
    cast(languages_url as {{ dbt_utils.type_string() }}) as languages_url,
    cast(default_branch as {{ dbt_utils.type_string() }}) as default_branch,
    cast(milestones_url as {{ dbt_utils.type_string() }}) as milestones_url,
    cast(stargazers_url as {{ dbt_utils.type_string() }}) as stargazers_url,
    cast(watchers_count as {{ dbt_utils.type_bigint() }}) as watchers_count,
    cast(deployments_url as {{ dbt_utils.type_string() }}) as deployments_url,
    cast(git_commits_url as {{ dbt_utils.type_string() }}) as git_commits_url,
    cast(subscribers_url as {{ dbt_utils.type_string() }}) as subscribers_url,
    cast(contributors_url as {{ dbt_utils.type_string() }}) as contributors_url,
    cast(issue_events_url as {{ dbt_utils.type_string() }}) as issue_events_url,
    cast(stargazers_count as {{ dbt_utils.type_bigint() }}) as stargazers_count,
    cast(subscription_url as {{ dbt_utils.type_string() }}) as subscription_url,
    cast(collaborators_url as {{ dbt_utils.type_string() }}) as collaborators_url,
    cast(issue_comment_url as {{ dbt_utils.type_string() }}) as issue_comment_url,
    cast(notifications_url as {{ dbt_utils.type_string() }}) as notifications_url,
    cast(open_issues_count as {{ dbt_utils.type_bigint() }}) as open_issues_count,
    _airbyte_ab_id,
    _airbyte_emitted_at,
    {{ current_timestamp() }} as _airbyte_normalized_at
from {{ ref('repositories_ab1') }}
-- repositories
where 1 = 1

